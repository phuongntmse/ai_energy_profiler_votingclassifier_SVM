file_name,model,prediction,confidence
cpu_14_test_01.csv,CPU,Memory intensive,0.5949
cpu_14_test_01.csv,MEMORY,Memory intensive,0.4924
cpu_14_test_01.csv,DISK_IO,CPU intensive,0.6548
cpu_14_test_01.csv,ENERGY,Memory intensive,0.3423
cpu_14_test_01.csv,ALL,CPU intensive,0.6457
cpu_14_test_02.csv,CPU,Memory intensive,0.5327
cpu_14_test_02.csv,MEMORY,Memory intensive,0.4603
cpu_14_test_02.csv,DISK_IO,CPU intensive,0.6414
cpu_14_test_02.csv,ENERGY,Memory intensive,0.3576
cpu_14_test_02.csv,ALL,Memory intensive,0.3357
cpu_14_test_03.csv,CPU,Memory intensive,0.4358
cpu_14_test_03.csv,MEMORY,Memory intensive,0.512
cpu_14_test_03.csv,DISK_IO,Memory intensive,0.3681
cpu_14_test_03.csv,ENERGY,Memory intensive,0.3528
cpu_14_test_03.csv,ALL,CPU intensive,0.6491
cpu_14_test_04.csv,CPU,Memory intensive,0.5604
cpu_14_test_04.csv,MEMORY,Memory intensive,0.5425
cpu_14_test_04.csv,DISK_IO,Memory intensive,0.3728
cpu_14_test_04.csv,ENERGY,Memory intensive,0.3612
cpu_14_test_04.csv,ALL,Memory intensive,0.423
cpu_14_test_05.csv,CPU,Memory intensive,0.6738
cpu_14_test_05.csv,MEMORY,Memory intensive,0.5413
cpu_14_test_05.csv,DISK_IO,CPU intensive,0.6321
cpu_14_test_05.csv,ENERGY,Memory intensive,0.3471
cpu_14_test_05.csv,ALL,Memory intensive,0.3653
cpu_14_test_06.csv,CPU,Memory intensive,0.6401
cpu_14_test_06.csv,MEMORY,Memory intensive,0.5011
cpu_14_test_06.csv,DISK_IO,CPU intensive,0.5555
cpu_14_test_06.csv,ENERGY,Memory intensive,0.3538
cpu_14_test_06.csv,ALL,Memory intensive,0.3529
cpu_14_test_07.csv,CPU,Memory intensive,0.5794
cpu_14_test_07.csv,MEMORY,Memory intensive,0.5395
cpu_14_test_07.csv,DISK_IO,CPU intensive,0.5648
cpu_14_test_07.csv,ENERGY,Memory intensive,0.3555
cpu_14_test_07.csv,ALL,CPU intensive,0.5686
cpu_14_test_08.csv,CPU,Memory intensive,0.5313
cpu_14_test_08.csv,MEMORY,Memory intensive,0.5087
cpu_14_test_08.csv,DISK_IO,CPU intensive,0.6118
cpu_14_test_08.csv,ENERGY,Memory intensive,0.354
cpu_14_test_08.csv,ALL,CPU intensive,0.6497
cpu_14_test_09.csv,CPU,Memory intensive,0.4901
cpu_14_test_09.csv,MEMORY,Memory intensive,0.5148
cpu_14_test_09.csv,DISK_IO,CPU intensive,0.5756
cpu_14_test_09.csv,ENERGY,Memory intensive,0.3709
cpu_14_test_09.csv,ALL,Memory intensive,0.392
cpu_14_test_10.csv,CPU,Memory intensive,0.498
cpu_14_test_10.csv,MEMORY,Memory intensive,0.5152
cpu_14_test_10.csv,DISK_IO,CPU intensive,0.6009
cpu_14_test_10.csv,ENERGY,Memory intensive,0.3505
cpu_14_test_10.csv,ALL,Memory intensive,0.3578
cpu_15_test_01.csv,CPU,Disk intensive,1.0
cpu_15_test_01.csv,MEMORY,Disk intensive,0.4076
cpu_15_test_01.csv,DISK_IO,Memory intensive,0.6624
cpu_15_test_01.csv,ENERGY,Network intensive,0.8476
cpu_15_test_01.csv,ALL,Disk intensive,0.3537
cpu_15_test_02.csv,CPU,CPU intensive,0.9419
cpu_15_test_02.csv,MEMORY,CPU intensive,0.5675
cpu_15_test_02.csv,DISK_IO,CPU intensive,0.3739
cpu_15_test_02.csv,ENERGY,Network intensive,0.8634
cpu_15_test_02.csv,ALL,Disk intensive,0.3643
cpu_15_test_03.csv,CPU,CPU intensive,0.4132
cpu_15_test_03.csv,MEMORY,Disk intensive,0.379
cpu_15_test_03.csv,DISK_IO,CPU intensive,0.3414
cpu_15_test_03.csv,ENERGY,Network intensive,0.8536
cpu_15_test_03.csv,ALL,Disk intensive,0.4196
cpu_15_test_04.csv,CPU,CPU intensive,0.2643
cpu_15_test_04.csv,MEMORY,Disk intensive,0.3771
cpu_15_test_04.csv,DISK_IO,CPU intensive,0.4705
cpu_15_test_04.csv,ENERGY,Network intensive,0.8464
cpu_15_test_04.csv,ALL,Disk intensive,0.3472
cpu_15_test_05.csv,CPU,CPU intensive,0.2232
cpu_15_test_05.csv,MEMORY,CPU intensive,0.5641
cpu_15_test_05.csv,DISK_IO,CPU intensive,0.3767
cpu_15_test_05.csv,ENERGY,Network intensive,0.8507
cpu_15_test_05.csv,ALL,Disk intensive,0.3689
cpu_15_test_06.csv,CPU,CPU intensive,0.2094
cpu_15_test_06.csv,MEMORY,CPU intensive,0.5815
cpu_15_test_06.csv,DISK_IO,CPU intensive,0.5983
cpu_15_test_06.csv,ENERGY,Network intensive,0.8537
cpu_15_test_06.csv,ALL,Disk intensive,0.355
cpu_15_test_07.csv,CPU,CPU intensive,0.1517
cpu_15_test_07.csv,MEMORY,Disk intensive,0.3644
cpu_15_test_07.csv,DISK_IO,CPU intensive,0.4738
cpu_15_test_07.csv,ENERGY,Network intensive,0.8492
cpu_15_test_07.csv,ALL,Disk intensive,0.3761
cpu_15_test_08.csv,CPU,CPU intensive,0.1501
cpu_15_test_08.csv,MEMORY,CPU intensive,0.525
cpu_15_test_08.csv,DISK_IO,CPU intensive,0.475
cpu_15_test_08.csv,ENERGY,Network intensive,0.8439
cpu_15_test_08.csv,ALL,Disk intensive,0.3506
cpu_15_test_09.csv,CPU,CPU intensive,0.1606
cpu_15_test_09.csv,MEMORY,CPU intensive,0.5671
cpu_15_test_09.csv,DISK_IO,CPU intensive,0.5376
cpu_15_test_09.csv,ENERGY,Network intensive,0.8479
cpu_15_test_09.csv,ALL,Disk intensive,0.351
cpu_15_test_10.csv,CPU,CPU intensive,0.1785
cpu_15_test_10.csv,MEMORY,CPU intensive,0.5747
cpu_15_test_10.csv,DISK_IO,CPU intensive,0.4653
cpu_15_test_10.csv,ENERGY,Network intensive,0.8508
cpu_15_test_10.csv,ALL,Disk intensive,0.3442
cpu_16_test_01.csv,CPU,Disk intensive,0.5428
cpu_16_test_01.csv,MEMORY,CPU intensive,0.2285
cpu_16_test_01.csv,DISK_IO,Memory intensive,0.8134
cpu_16_test_01.csv,ENERGY,CPU intensive,0.3338
cpu_16_test_01.csv,ALL,CPU intensive,0.3944
cpu_16_test_02.csv,CPU,Memory intensive,0.6315
cpu_16_test_02.csv,MEMORY,CPU intensive,0.5598
cpu_16_test_02.csv,DISK_IO,CPU intensive,0.6595
cpu_16_test_02.csv,ENERGY,CPU intensive,0.35
cpu_16_test_02.csv,ALL,CPU intensive,0.7782
cpu_16_test_03.csv,CPU,CPU intensive,0.6193
cpu_16_test_03.csv,MEMORY,CPU intensive,0.222
cpu_16_test_03.csv,DISK_IO,Memory intensive,0.8281
cpu_16_test_03.csv,ENERGY,CPU intensive,0.3386
cpu_16_test_03.csv,ALL,CPU intensive,0.8654
cpu_16_test_04.csv,CPU,CPU intensive,0.6174
cpu_16_test_04.csv,MEMORY,CPU intensive,0.2231
cpu_16_test_04.csv,DISK_IO,Memory intensive,0.3426
cpu_16_test_04.csv,ENERGY,CPU intensive,0.3306
cpu_16_test_04.csv,ALL,CPU intensive,0.8506
cpu_16_test_05.csv,CPU,Memory intensive,0.4214
cpu_16_test_05.csv,MEMORY,CPU intensive,0.2235
cpu_16_test_05.csv,DISK_IO,Memory intensive,0.9697
cpu_16_test_05.csv,ENERGY,CPU intensive,0.3422
cpu_16_test_05.csv,ALL,CPU intensive,0.8425
cpu_16_test_06.csv,CPU,Memory intensive,0.5033
cpu_16_test_06.csv,MEMORY,CPU intensive,0.2238
cpu_16_test_06.csv,DISK_IO,Memory intensive,0.9379
cpu_16_test_06.csv,ENERGY,CPU intensive,0.3397
cpu_16_test_06.csv,ALL,CPU intensive,0.8409
cpu_16_test_07.csv,CPU,Memory intensive,0.6572
cpu_16_test_07.csv,MEMORY,CPU intensive,0.2233
cpu_16_test_07.csv,DISK_IO,CPU intensive,0.3683
cpu_16_test_07.csv,ENERGY,CPU intensive,0.3392
cpu_16_test_07.csv,ALL,CPU intensive,0.8096
cpu_16_test_08.csv,CPU,Memory intensive,0.7469
cpu_16_test_08.csv,MEMORY,CPU intensive,0.224
cpu_16_test_08.csv,DISK_IO,CPU intensive,0.6577
cpu_16_test_08.csv,ENERGY,CPU intensive,0.3466
cpu_16_test_08.csv,ALL,CPU intensive,0.8465
cpu_16_test_09.csv,CPU,Memory intensive,0.7141
cpu_16_test_09.csv,MEMORY,CPU intensive,0.2235
cpu_16_test_09.csv,DISK_IO,Memory intensive,0.6479
cpu_16_test_09.csv,ENERGY,CPU intensive,0.3356
cpu_16_test_09.csv,ALL,CPU intensive,0.858
cpu_16_test_10.csv,CPU,Memory intensive,0.7493
cpu_16_test_10.csv,MEMORY,CPU intensive,0.2236
cpu_16_test_10.csv,DISK_IO,CPU intensive,0.5814
cpu_16_test_10.csv,ENERGY,CPU intensive,0.3433
cpu_16_test_10.csv,ALL,CPU intensive,0.8473
disk_10_test_01.csv,CPU,Disk intensive,0.5418
disk_10_test_01.csv,MEMORY,Disk intensive,0.6509
disk_10_test_01.csv,DISK_IO,CPU intensive,0.6217
disk_10_test_01.csv,ENERGY,CPU intensive,0.861
disk_10_test_01.csv,ALL,CPU intensive,0.9776
disk_10_test_02.csv,CPU,Disk intensive,0.6353
disk_10_test_02.csv,MEMORY,Disk intensive,0.6422
disk_10_test_02.csv,DISK_IO,CPU intensive,0.5973
disk_10_test_02.csv,ENERGY,CPU intensive,0.8048
disk_10_test_02.csv,ALL,CPU intensive,0.981
disk_10_test_03.csv,CPU,Disk intensive,0.797
disk_10_test_03.csv,MEMORY,Disk intensive,0.648
disk_10_test_03.csv,DISK_IO,CPU intensive,0.6718
disk_10_test_03.csv,ENERGY,CPU intensive,0.8317
disk_10_test_03.csv,ALL,CPU intensive,0.9809
disk_10_test_04.csv,CPU,Disk intensive,0.6961
disk_10_test_04.csv,MEMORY,Disk intensive,0.651
disk_10_test_04.csv,DISK_IO,CPU intensive,0.6132
disk_10_test_04.csv,ENERGY,CPU intensive,0.8765
disk_10_test_04.csv,ALL,CPU intensive,0.9836
disk_10_test_05.csv,CPU,Disk intensive,0.6686
disk_10_test_05.csv,MEMORY,Disk intensive,0.646
disk_10_test_05.csv,DISK_IO,CPU intensive,0.6686
disk_10_test_05.csv,ENERGY,CPU intensive,0.7754
disk_10_test_05.csv,ALL,CPU intensive,0.9802
disk_10_test_06.csv,CPU,Disk intensive,0.5386
disk_10_test_06.csv,MEMORY,Disk intensive,0.6484
disk_10_test_06.csv,DISK_IO,CPU intensive,0.6207
disk_10_test_06.csv,ENERGY,CPU intensive,0.7783
disk_10_test_06.csv,ALL,CPU intensive,0.9804
disk_10_test_07.csv,CPU,Disk intensive,0.6704
disk_10_test_07.csv,MEMORY,Disk intensive,0.645
disk_10_test_07.csv,DISK_IO,CPU intensive,0.6055
disk_10_test_07.csv,ENERGY,CPU intensive,0.7612
disk_10_test_07.csv,ALL,CPU intensive,0.9808
disk_10_test_08.csv,CPU,Memory intensive,0.4582
disk_10_test_08.csv,MEMORY,Disk intensive,0.6439
disk_10_test_08.csv,DISK_IO,CPU intensive,0.5975
disk_10_test_08.csv,ENERGY,CPU intensive,0.777
disk_10_test_08.csv,ALL,CPU intensive,0.9782
disk_10_test_09.csv,CPU,Disk intensive,0.6911
disk_10_test_09.csv,MEMORY,Disk intensive,0.6401
disk_10_test_09.csv,DISK_IO,CPU intensive,0.6301
disk_10_test_09.csv,ENERGY,CPU intensive,0.8222
disk_10_test_09.csv,ALL,CPU intensive,0.98
disk_10_test_10.csv,CPU,Disk intensive,0.6866
disk_10_test_10.csv,MEMORY,Disk intensive,0.6448
disk_10_test_10.csv,DISK_IO,CPU intensive,0.583
disk_10_test_10.csv,ENERGY,CPU intensive,0.7652
disk_10_test_10.csv,ALL,CPU intensive,0.9811
disk_9_test_01.csv,CPU,Disk intensive,0.9999
disk_9_test_01.csv,MEMORY,Memory intensive,0.3037
disk_9_test_01.csv,DISK_IO,Disk intensive,0.9142
disk_9_test_01.csv,ENERGY,Disk intensive,0.819
disk_9_test_01.csv,ALL,Disk intensive,0.9999
disk_9_test_02.csv,CPU,Disk intensive,1.0
disk_9_test_02.csv,MEMORY,Disk intensive,0.5277
disk_9_test_02.csv,DISK_IO,Disk intensive,0.8063
disk_9_test_02.csv,ENERGY,Disk intensive,0.6546
disk_9_test_02.csv,ALL,Disk intensive,0.9999
disk_9_test_03.csv,CPU,Disk intensive,0.7106
disk_9_test_03.csv,MEMORY,Memory intensive,0.746
disk_9_test_03.csv,DISK_IO,Memory intensive,0.3432
disk_9_test_03.csv,ENERGY,CPU intensive,0.3927
disk_9_test_03.csv,ALL,Disk intensive,0.94
disk_9_test_04.csv,CPU,Disk intensive,0.7756
disk_9_test_04.csv,MEMORY,Memory intensive,0.7697
disk_9_test_04.csv,DISK_IO,Memory intensive,0.3417
disk_9_test_04.csv,ENERGY,CPU intensive,0.4472
disk_9_test_04.csv,ALL,Disk intensive,0.9317
disk_9_test_05.csv,CPU,Disk intensive,0.7703
disk_9_test_05.csv,MEMORY,Memory intensive,0.7622
disk_9_test_05.csv,DISK_IO,Memory intensive,0.3374
disk_9_test_05.csv,ENERGY,CPU intensive,0.4706
disk_9_test_05.csv,ALL,Disk intensive,0.9177
disk_9_test_06.csv,CPU,Disk intensive,0.8074
disk_9_test_06.csv,MEMORY,Memory intensive,0.7575
disk_9_test_06.csv,DISK_IO,Memory intensive,0.3425
disk_9_test_06.csv,ENERGY,CPU intensive,0.4818
disk_9_test_06.csv,ALL,Disk intensive,0.9225
disk_9_test_07.csv,CPU,Disk intensive,0.9979
disk_9_test_07.csv,MEMORY,Memory intensive,0.2862
disk_9_test_07.csv,DISK_IO,Disk intensive,0.7535
disk_9_test_07.csv,ENERGY,CPU intensive,0.7444
disk_9_test_07.csv,ALL,Disk intensive,1.0
disk_9_test_08.csv,CPU,Disk intensive,0.9947
disk_9_test_08.csv,MEMORY,Memory intensive,0.2742
disk_9_test_08.csv,DISK_IO,Disk intensive,0.7038
disk_9_test_08.csv,ENERGY,CPU intensive,0.6344
disk_9_test_08.csv,ALL,Disk intensive,1.0
disk_9_test_09.csv,CPU,Disk intensive,0.9963
disk_9_test_09.csv,MEMORY,Memory intensive,0.2781
disk_9_test_09.csv,DISK_IO,Disk intensive,0.6515
disk_9_test_09.csv,ENERGY,CPU intensive,0.8415
disk_9_test_09.csv,ALL,Disk intensive,1.0
disk_9_test_10.csv,CPU,Disk intensive,0.996
disk_9_test_10.csv,MEMORY,Memory intensive,0.2639
disk_9_test_10.csv,DISK_IO,Disk intensive,0.6056
disk_9_test_10.csv,ENERGY,CPU intensive,0.8198
disk_9_test_10.csv,ALL,Disk intensive,0.9999
jv_collection_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_01.csv,MEMORY,Memory intensive,0.9127
jv_collection_01.csv,DISK_IO,CPU intensive,0.5555
jv_collection_01.csv,ENERGY,Memory intensive,0.99
jv_collection_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_02.csv,MEMORY,Memory intensive,0.9708
jv_collection_02.csv,DISK_IO,CPU intensive,0.6913
jv_collection_02.csv,ENERGY,Memory intensive,0.9961
jv_collection_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_03.csv,MEMORY,Memory intensive,0.9722
jv_collection_03.csv,DISK_IO,CPU intensive,0.5992
jv_collection_03.csv,ENERGY,Memory intensive,0.992
jv_collection_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_04.csv,MEMORY,Memory intensive,0.9675
jv_collection_04.csv,DISK_IO,CPU intensive,0.6455
jv_collection_04.csv,ENERGY,Memory intensive,0.9867
jv_collection_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_05.csv,MEMORY,Memory intensive,0.9599
jv_collection_05.csv,DISK_IO,CPU intensive,0.592
jv_collection_05.csv,ENERGY,Memory intensive,0.9895
jv_collection_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_06.csv,MEMORY,Memory intensive,0.9689
jv_collection_06.csv,DISK_IO,CPU intensive,0.68
jv_collection_06.csv,ENERGY,Memory intensive,0.9907
jv_collection_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_07.csv,MEMORY,Memory intensive,0.9764
jv_collection_07.csv,DISK_IO,CPU intensive,0.6715
jv_collection_07.csv,ENERGY,Memory intensive,0.989
jv_collection_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_08.csv,MEMORY,Memory intensive,0.978
jv_collection_08.csv,DISK_IO,CPU intensive,0.7037
jv_collection_08.csv,ENERGY,Memory intensive,0.9915
jv_collection_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_09.csv,MEMORY,Memory intensive,0.9825
jv_collection_09.csv,DISK_IO,Memory intensive,0.3771
jv_collection_09.csv,ENERGY,Memory intensive,0.9841
jv_collection_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
jv_collection_10.csv,MEMORY,Memory intensive,0.9784
jv_collection_10.csv,DISK_IO,CPU intensive,0.6714
jv_collection_10.csv,ENERGY,Memory intensive,0.9954
jv_collection_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
memory_5_test_01.csv,CPU,Disk intensive,0.9998
memory_5_test_01.csv,MEMORY,Disk intensive,0.472
memory_5_test_01.csv,DISK_IO,CPU intensive,0.5062
memory_5_test_01.csv,ENERGY,Disk intensive,0.944
memory_5_test_01.csv,ALL,Disk intensive,0.9742
memory_5_test_02.csv,CPU,Disk intensive,0.9998
memory_5_test_02.csv,MEMORY,Disk intensive,0.4666
memory_5_test_02.csv,DISK_IO,CPU intensive,0.5859
memory_5_test_02.csv,ENERGY,Disk intensive,0.9446
memory_5_test_02.csv,ALL,Disk intensive,0.9757
memory_5_test_03.csv,CPU,Disk intensive,0.9999
memory_5_test_03.csv,MEMORY,Disk intensive,0.4627
memory_5_test_03.csv,DISK_IO,CPU intensive,0.6091
memory_5_test_03.csv,ENERGY,Disk intensive,0.9461
memory_5_test_03.csv,ALL,Disk intensive,0.9715
memory_5_test_04.csv,CPU,Disk intensive,0.9999
memory_5_test_04.csv,MEMORY,Disk intensive,0.4634
memory_5_test_04.csv,DISK_IO,CPU intensive,0.5621
memory_5_test_04.csv,ENERGY,Disk intensive,0.9374
memory_5_test_04.csv,ALL,Disk intensive,0.9795
memory_5_test_05.csv,CPU,Disk intensive,0.9999
memory_5_test_05.csv,MEMORY,Disk intensive,0.4509
memory_5_test_05.csv,DISK_IO,CPU intensive,0.553
memory_5_test_05.csv,ENERGY,Disk intensive,0.9476
memory_5_test_05.csv,ALL,Disk intensive,0.9696
memory_5_test_06.csv,CPU,Disk intensive,0.9999
memory_5_test_06.csv,MEMORY,Disk intensive,0.4674
memory_5_test_06.csv,DISK_IO,CPU intensive,0.5596
memory_5_test_06.csv,ENERGY,Disk intensive,0.9467
memory_5_test_06.csv,ALL,Disk intensive,0.9771
memory_5_test_07.csv,CPU,Disk intensive,0.9999
memory_5_test_07.csv,MEMORY,Disk intensive,0.4447
memory_5_test_07.csv,DISK_IO,CPU intensive,0.6491
memory_5_test_07.csv,ENERGY,Disk intensive,0.9455
memory_5_test_07.csv,ALL,Disk intensive,0.9712
memory_5_test_08.csv,CPU,Disk intensive,0.9999
memory_5_test_08.csv,MEMORY,Disk intensive,0.4575
memory_5_test_08.csv,DISK_IO,CPU intensive,0.6435
memory_5_test_08.csv,ENERGY,Disk intensive,0.9504
memory_5_test_08.csv,ALL,Disk intensive,0.9712
memory_5_test_09.csv,CPU,Disk intensive,0.9999
memory_5_test_09.csv,MEMORY,Disk intensive,0.4618
memory_5_test_09.csv,DISK_IO,CPU intensive,0.629
memory_5_test_09.csv,ENERGY,Disk intensive,0.9385
memory_5_test_09.csv,ALL,Disk intensive,0.9731
memory_5_test_10.csv,CPU,Disk intensive,1.0
memory_5_test_10.csv,MEMORY,Disk intensive,0.4541
memory_5_test_10.csv,DISK_IO,CPU intensive,0.5501
memory_5_test_10.csv,ENERGY,Disk intensive,0.9496
memory_5_test_10.csv,ALL,Disk intensive,0.9784
mvn_build_activiti_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_01.csv,MEMORY,Disk intensive,0.607
mvn_build_activiti_01.csv,DISK_IO,Disk intensive,0.4167
mvn_build_activiti_01.csv,ENERGY,Memory intensive,0.6931
mvn_build_activiti_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_02.csv,MEMORY,CPU intensive,0.5153
mvn_build_activiti_02.csv,DISK_IO,Memory intensive,0.4852
mvn_build_activiti_02.csv,ENERGY,Memory intensive,0.6031
mvn_build_activiti_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_03.csv,MEMORY,Memory intensive,0.3052
mvn_build_activiti_03.csv,DISK_IO,CPU intensive,0.5789
mvn_build_activiti_03.csv,ENERGY,Memory intensive,0.5088
mvn_build_activiti_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_04.csv,MEMORY,CPU intensive,0.5099
mvn_build_activiti_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_04.csv,ENERGY,Memory intensive,0.6049
mvn_build_activiti_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_05.csv,MEMORY,CPU intensive,0.5808
mvn_build_activiti_05.csv,DISK_IO,CPU intensive,0.829
mvn_build_activiti_05.csv,ENERGY,Memory intensive,0.5403
mvn_build_activiti_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_06.csv,MEMORY,Memory intensive,0.5871
mvn_build_activiti_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_06.csv,ENERGY,Memory intensive,0.6082
mvn_build_activiti_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_07.csv,MEMORY,Memory intensive,0.5802
mvn_build_activiti_07.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_07.csv,ENERGY,Memory intensive,0.5506
mvn_build_activiti_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_08.csv,MEMORY,CPU intensive,0.4871
mvn_build_activiti_08.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_08.csv,ENERGY,Memory intensive,0.7087
mvn_build_activiti_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_09.csv,MEMORY,Memory intensive,0.4624
mvn_build_activiti_09.csv,DISK_IO,Memory intensive,0.9333
mvn_build_activiti_09.csv,ENERGY,Memory intensive,0.5479
mvn_build_activiti_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_activiti_10.csv,MEMORY,CPU intensive,0.5631
mvn_build_activiti_10.csv,DISK_IO,CPU intensive,0.625
mvn_build_activiti_10.csv,ENERGY,Memory intensive,0.6305
mvn_build_activiti_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_01.csv,MEMORY,Memory intensive,0.6529
mvn_build_clojure_01.csv,DISK_IO,CPU intensive,0.4883
mvn_build_clojure_01.csv,ENERGY,Memory intensive,0.2948
mvn_build_clojure_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_02.csv,MEMORY,CPU intensive,0.5256
mvn_build_clojure_02.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_02.csv,ENERGY,CPU intensive,0.6602
mvn_build_clojure_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_03.csv,MEMORY,CPU intensive,0.4534
mvn_build_clojure_03.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_03.csv,ENERGY,CPU intensive,0.682
mvn_build_clojure_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_04.csv,MEMORY,CPU intensive,0.5228
mvn_build_clojure_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_04.csv,ENERGY,CPU intensive,0.7316
mvn_build_clojure_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_05.csv,MEMORY,Memory intensive,0.3246
mvn_build_clojure_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_05.csv,ENERGY,CPU intensive,0.6575
mvn_build_clojure_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_06.csv,MEMORY,CPU intensive,0.4891
mvn_build_clojure_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_06.csv,ENERGY,CPU intensive,0.6623
mvn_build_clojure_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_07.csv,MEMORY,Memory intensive,0.6365
mvn_build_clojure_07.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_07.csv,ENERGY,CPU intensive,0.6651
mvn_build_clojure_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_08.csv,MEMORY,CPU intensive,0.5632
mvn_build_clojure_08.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_08.csv,ENERGY,Memory intensive,0.3
mvn_build_clojure_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_09.csv,MEMORY,Memory intensive,0.6471
mvn_build_clojure_09.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_09.csv,ENERGY,CPU intensive,0.659
mvn_build_clojure_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_10.csv,MEMORY,Memory intensive,0.6473
mvn_build_clojure_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_clojure_10.csv,ENERGY,CPU intensive,0.7217
mvn_build_clojure_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_01.csv,MEMORY,CPU intensive,0.5878
mvn_build_jitwatch_01.csv,DISK_IO,Memory intensive,0.4831
mvn_build_jitwatch_01.csv,ENERGY,CPU intensive,0.8286
mvn_build_jitwatch_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_02.csv,MEMORY,CPU intensive,0.5892
mvn_build_jitwatch_02.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_02.csv,ENERGY,CPU intensive,0.7152
mvn_build_jitwatch_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_03.csv,MEMORY,CPU intensive,0.5904
mvn_build_jitwatch_03.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_03.csv,ENERGY,CPU intensive,0.7801
mvn_build_jitwatch_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_04.csv,MEMORY,CPU intensive,0.5865
mvn_build_jitwatch_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_04.csv,ENERGY,CPU intensive,0.6195
mvn_build_jitwatch_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_05.csv,MEMORY,CPU intensive,0.588
mvn_build_jitwatch_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_05.csv,ENERGY,CPU intensive,0.7956
mvn_build_jitwatch_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_06.csv,MEMORY,CPU intensive,0.5933
mvn_build_jitwatch_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_06.csv,ENERGY,CPU intensive,0.827
mvn_build_jitwatch_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_07.csv,MEMORY,CPU intensive,0.5913
mvn_build_jitwatch_07.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_07.csv,ENERGY,CPU intensive,0.7689
mvn_build_jitwatch_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_08.csv,MEMORY,CPU intensive,0.5913
mvn_build_jitwatch_08.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_08.csv,ENERGY,CPU intensive,0.5892
mvn_build_jitwatch_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_09.csv,MEMORY,CPU intensive,0.5913
mvn_build_jitwatch_09.csv,DISK_IO,CPU intensive,0.5871
mvn_build_jitwatch_09.csv,ENERGY,CPU intensive,0.7863
mvn_build_jitwatch_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_10.csv,MEMORY,CPU intensive,0.5849
mvn_build_jitwatch_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_jitwatch_10.csv,ENERGY,CPU intensive,0.8197
mvn_build_jitwatch_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_01.csv,MEMORY,Memory intensive,0.5813
mvn_build_langtool_01.csv,DISK_IO,CPU intensive,0.2593
mvn_build_langtool_01.csv,ENERGY,CPU intensive,0.6497
mvn_build_langtool_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_02.csv,MEMORY,Memory intensive,0.7913
mvn_build_langtool_02.csv,DISK_IO,CPU intensive,0.6133
mvn_build_langtool_02.csv,ENERGY,CPU intensive,0.6503
mvn_build_langtool_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_03.csv,MEMORY,Memory intensive,0.4992
mvn_build_langtool_03.csv,DISK_IO,CPU intensive,0.5706
mvn_build_langtool_03.csv,ENERGY,CPU intensive,0.7236
mvn_build_langtool_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_04.csv,MEMORY,Memory intensive,0.4549
mvn_build_langtool_04.csv,DISK_IO,Memory intensive,0.5099
mvn_build_langtool_04.csv,ENERGY,CPU intensive,0.735
mvn_build_langtool_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_05.csv,MEMORY,Memory intensive,0.6917
mvn_build_langtool_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_05.csv,ENERGY,CPU intensive,0.6555
mvn_build_langtool_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_06.csv,MEMORY,Memory intensive,0.4362
mvn_build_langtool_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_06.csv,ENERGY,CPU intensive,0.7167
mvn_build_langtool_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_07.csv,MEMORY,Memory intensive,0.6666
mvn_build_langtool_07.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_07.csv,ENERGY,CPU intensive,0.6584
mvn_build_langtool_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_08.csv,MEMORY,Memory intensive,0.625
mvn_build_langtool_08.csv,DISK_IO,CPU intensive,0.487
mvn_build_langtool_08.csv,ENERGY,CPU intensive,0.7319
mvn_build_langtool_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_09.csv,MEMORY,Memory intensive,0.5722
mvn_build_langtool_09.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_09.csv,ENERGY,CPU intensive,0.708
mvn_build_langtool_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_10.csv,MEMORY,Memory intensive,0.4867
mvn_build_langtool_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_langtool_10.csv,ENERGY,CPU intensive,0.72
mvn_build_langtool_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_01.csv,MEMORY,Memory intensive,0.4139
mvn_build_litemall_01.csv,DISK_IO,Memory intensive,0.3937
mvn_build_litemall_01.csv,ENERGY,CPU intensive,0.7777
mvn_build_litemall_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_02.csv,MEMORY,Memory intensive,0.4117
mvn_build_litemall_02.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_02.csv,ENERGY,CPU intensive,0.697
mvn_build_litemall_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_03.csv,MEMORY,Memory intensive,0.4157
mvn_build_litemall_03.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_03.csv,ENERGY,CPU intensive,0.7467
mvn_build_litemall_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_04.csv,MEMORY,Memory intensive,0.4143
mvn_build_litemall_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_04.csv,ENERGY,CPU intensive,0.6461
mvn_build_litemall_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_05.csv,MEMORY,Memory intensive,0.418
mvn_build_litemall_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_05.csv,ENERGY,Memory intensive,0.3241
mvn_build_litemall_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_06.csv,MEMORY,Memory intensive,0.4174
mvn_build_litemall_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_06.csv,ENERGY,CPU intensive,0.5013
mvn_build_litemall_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_07.csv,MEMORY,Memory intensive,0.4103
mvn_build_litemall_07.csv,DISK_IO,Memory intensive,0.6276
mvn_build_litemall_07.csv,ENERGY,CPU intensive,0.5015
mvn_build_litemall_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_08.csv,MEMORY,Memory intensive,0.4146
mvn_build_litemall_08.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_08.csv,ENERGY,CPU intensive,0.6379
mvn_build_litemall_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_09.csv,MEMORY,Memory intensive,0.4217
mvn_build_litemall_09.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_09.csv,ENERGY,CPU intensive,0.7908
mvn_build_litemall_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_10.csv,MEMORY,Memory intensive,0.4246
mvn_build_litemall_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_build_litemall_10.csv,ENERGY,CPU intensive,0.5058
mvn_build_litemall_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_01.csv,MEMORY,CPU intensive,0.6469
mvn_test_esson_01.csv,DISK_IO,Memory intensive,0.3501
mvn_test_esson_01.csv,ENERGY,CPU intensive,0.7676
mvn_test_esson_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_02.csv,MEMORY,CPU intensive,0.6452
mvn_test_esson_02.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_02.csv,ENERGY,CPU intensive,0.8359
mvn_test_esson_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_03.csv,MEMORY,CPU intensive,0.6415
mvn_test_esson_03.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_03.csv,ENERGY,Network intensive,0.2401
mvn_test_esson_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_04.csv,MEMORY,CPU intensive,0.6505
mvn_test_esson_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_04.csv,ENERGY,CPU intensive,0.7871
mvn_test_esson_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_05.csv,MEMORY,CPU intensive,0.6461
mvn_test_esson_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_05.csv,ENERGY,Network intensive,0.2518
mvn_test_esson_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_06.csv,MEMORY,CPU intensive,0.636
mvn_test_esson_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_06.csv,ENERGY,CPU intensive,0.7613
mvn_test_esson_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_07.csv,MEMORY,CPU intensive,0.65
mvn_test_esson_07.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_07.csv,ENERGY,CPU intensive,0.7622
mvn_test_esson_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_08.csv,MEMORY,CPU intensive,0.6225
mvn_test_esson_08.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_08.csv,ENERGY,CPU intensive,0.7484
mvn_test_esson_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_09.csv,MEMORY,CPU intensive,0.6498
mvn_test_esson_09.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_09.csv,ENERGY,CPU intensive,0.8597
mvn_test_esson_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_10.csv,MEMORY,CPU intensive,0.6421
mvn_test_esson_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_esson_10.csv,ENERGY,CPU intensive,0.7595
mvn_test_esson_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_01.csv,MEMORY,Disk intensive,0.6034
mvn_test_jckdb_01.csv,DISK_IO,CPU intensive,0.6655
mvn_test_jckdb_01.csv,ENERGY,CPU intensive,0.6439
mvn_test_jckdb_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_02.csv,MEMORY,Disk intensive,0.5915
mvn_test_jckdb_02.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_02.csv,ENERGY,CPU intensive,0.7209
mvn_test_jckdb_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_03.csv,MEMORY,Disk intensive,0.5918
mvn_test_jckdb_03.csv,DISK_IO,Memory intensive,0.3835
mvn_test_jckdb_03.csv,ENERGY,CPU intensive,0.7426
mvn_test_jckdb_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_04.csv,MEMORY,Disk intensive,0.6009
mvn_test_jckdb_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_04.csv,ENERGY,CPU intensive,0.7277
mvn_test_jckdb_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_05.csv,MEMORY,Disk intensive,0.6156
mvn_test_jckdb_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_05.csv,ENERGY,CPU intensive,0.6645
mvn_test_jckdb_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_06.csv,MEMORY,Disk intensive,0.5987
mvn_test_jckdb_06.csv,DISK_IO,CPU intensive,0.6078
mvn_test_jckdb_06.csv,ENERGY,CPU intensive,0.735
mvn_test_jckdb_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_07.csv,MEMORY,Disk intensive,0.5964
mvn_test_jckdb_07.csv,DISK_IO,CPU intensive,0.8404
mvn_test_jckdb_07.csv,ENERGY,CPU intensive,0.7521
mvn_test_jckdb_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_08.csv,MEMORY,Disk intensive,0.5653
mvn_test_jckdb_08.csv,DISK_IO,CPU intensive,0.5939
mvn_test_jckdb_08.csv,ENERGY,CPU intensive,0.7089
mvn_test_jckdb_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_09.csv,MEMORY,Disk intensive,0.6195
mvn_test_jckdb_09.csv,DISK_IO,CPU intensive,0.5611
mvn_test_jckdb_09.csv,ENERGY,CPU intensive,0.6295
mvn_test_jckdb_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jckdb_10.csv,MEMORY,Disk intensive,0.5513
mvn_test_jckdb_10.csv,DISK_IO,CPU intensive,0.7086
mvn_test_jckdb_10.csv,ENERGY,CPU intensive,0.6376
mvn_test_jckdb_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_01.csv,MEMORY,CPU intensive,0.6435
mvn_test_jsonjv_01.csv,DISK_IO,CPU intensive,0.5895
mvn_test_jsonjv_01.csv,ENERGY,CPU intensive,0.7315
mvn_test_jsonjv_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_02.csv,MEMORY,CPU intensive,0.6353
mvn_test_jsonjv_02.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_02.csv,ENERGY,CPU intensive,0.8989
mvn_test_jsonjv_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_03.csv,MEMORY,Memory intensive,0.3171
mvn_test_jsonjv_03.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_03.csv,ENERGY,CPU intensive,0.7681
mvn_test_jsonjv_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_04.csv,MEMORY,Memory intensive,0.3161
mvn_test_jsonjv_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_04.csv,ENERGY,CPU intensive,0.7365
mvn_test_jsonjv_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_05.csv,MEMORY,Memory intensive,0.3025
mvn_test_jsonjv_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_05.csv,ENERGY,CPU intensive,0.8786
mvn_test_jsonjv_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_06.csv,MEMORY,Memory intensive,0.4221
mvn_test_jsonjv_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_06.csv,ENERGY,CPU intensive,0.7778
mvn_test_jsonjv_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_07.csv,MEMORY,CPU intensive,0.6274
mvn_test_jsonjv_07.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_07.csv,ENERGY,CPU intensive,0.7644
mvn_test_jsonjv_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_08.csv,MEMORY,CPU intensive,0.6373
mvn_test_jsonjv_08.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_08.csv,ENERGY,CPU intensive,0.7958
mvn_test_jsonjv_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_09.csv,MEMORY,Memory intensive,0.3043
mvn_test_jsonjv_09.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_09.csv,ENERGY,CPU intensive,0.8138
mvn_test_jsonjv_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_10.csv,MEMORY,CPU intensive,0.6377
mvn_test_jsonjv_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonjv_10.csv,ENERGY,CPU intensive,0.8088
mvn_test_jsonjv_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_01.csv,MEMORY,Disk intensive,0.667
mvn_test_jsonspl_01.csv,DISK_IO,Memory intensive,0.4143
mvn_test_jsonspl_01.csv,ENERGY,CPU intensive,0.8251
mvn_test_jsonspl_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_02.csv,MEMORY,Disk intensive,0.6636
mvn_test_jsonspl_02.csv,DISK_IO,Memory intensive,0.9996
mvn_test_jsonspl_02.csv,ENERGY,CPU intensive,0.8332
mvn_test_jsonspl_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_03.csv,MEMORY,Disk intensive,0.659
mvn_test_jsonspl_03.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_03.csv,ENERGY,CPU intensive,0.8728
mvn_test_jsonspl_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_04.csv,MEMORY,Disk intensive,0.682
mvn_test_jsonspl_04.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_04.csv,ENERGY,CPU intensive,0.7968
mvn_test_jsonspl_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_05.csv,MEMORY,Disk intensive,0.6814
mvn_test_jsonspl_05.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_05.csv,ENERGY,CPU intensive,0.7829
mvn_test_jsonspl_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_06.csv,MEMORY,Disk intensive,0.6641
mvn_test_jsonspl_06.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_06.csv,ENERGY,CPU intensive,0.7662
mvn_test_jsonspl_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_07.csv,MEMORY,Disk intensive,0.6604
mvn_test_jsonspl_07.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_07.csv,ENERGY,CPU intensive,0.6993
mvn_test_jsonspl_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_08.csv,MEMORY,Disk intensive,0.6816
mvn_test_jsonspl_08.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_08.csv,ENERGY,CPU intensive,0.7618
mvn_test_jsonspl_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_09.csv,MEMORY,Disk intensive,0.6684
mvn_test_jsonspl_09.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_09.csv,ENERGY,CPU intensive,0.7857
mvn_test_jsonspl_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_10.csv,MEMORY,Disk intensive,0.662
mvn_test_jsonspl_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jsonspl_10.csv,ENERGY,CPU intensive,0.8096
mvn_test_jsonspl_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_01.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_01.csv,MEMORY,Disk intensive,0.6304
mvn_test_jz_01.csv,DISK_IO,Memory intensive,0.3695
mvn_test_jz_01.csv,ENERGY,Memory intensive,0.4085
mvn_test_jz_01.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_02.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_02.csv,MEMORY,Disk intensive,0.6369
mvn_test_jz_02.csv,DISK_IO,CPU intensive,0.5656
mvn_test_jz_02.csv,ENERGY,Memory intensive,0.4088
mvn_test_jz_02.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_03.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_03.csv,MEMORY,Disk intensive,0.6321
mvn_test_jz_03.csv,DISK_IO,Memory intensive,0.4139
mvn_test_jz_03.csv,ENERGY,Memory intensive,0.3536
mvn_test_jz_03.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_04.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_04.csv,MEMORY,Disk intensive,0.6374
mvn_test_jz_04.csv,DISK_IO,CPU intensive,0.6083
mvn_test_jz_04.csv,ENERGY,Memory intensive,0.3754
mvn_test_jz_04.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_05.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_05.csv,MEMORY,Disk intensive,0.6343
mvn_test_jz_05.csv,DISK_IO,CPU intensive,0.6819
mvn_test_jz_05.csv,ENERGY,Memory intensive,0.445
mvn_test_jz_05.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_06.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_06.csv,MEMORY,Disk intensive,0.6369
mvn_test_jz_06.csv,DISK_IO,CPU intensive,0.5018
mvn_test_jz_06.csv,ENERGY,Memory intensive,0.4526
mvn_test_jz_06.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_07.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_07.csv,MEMORY,Disk intensive,0.6361
mvn_test_jz_07.csv,DISK_IO,CPU intensive,0.6032
mvn_test_jz_07.csv,ENERGY,Memory intensive,0.474
mvn_test_jz_07.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_08.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_08.csv,MEMORY,Disk intensive,0.6383
mvn_test_jz_08.csv,DISK_IO,CPU intensive,0.6706
mvn_test_jz_08.csv,ENERGY,Memory intensive,0.4241
mvn_test_jz_08.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_09.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_09.csv,MEMORY,Disk intensive,0.6388
mvn_test_jz_09.csv,DISK_IO,CPU intensive,0.5416
mvn_test_jz_09.csv,ENERGY,Memory intensive,0.4695
mvn_test_jz_09.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_10.csv,CPU,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_10.csv,MEMORY,Disk intensive,0.6362
mvn_test_jz_10.csv,DISK_IO,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
mvn_test_jz_10.csv,ENERGY,Memory intensive,0.4513
mvn_test_jz_10.csv,ALL,"Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values",0.0
network_4_test_01.csv,CPU,Network intensive,0.5101
network_4_test_01.csv,MEMORY,Disk intensive,0.4364
network_4_test_01.csv,DISK_IO,Memory intensive,0.5992
network_4_test_01.csv,ENERGY,CPU intensive,0.2657
network_4_test_01.csv,ALL,Disk intensive,0.8966
network_4_test_02.csv,CPU,Network intensive,0.7595
network_4_test_02.csv,MEMORY,Disk intensive,0.4768
network_4_test_02.csv,DISK_IO,CPU intensive,0.5706
network_4_test_02.csv,ENERGY,Disk intensive,0.9682
network_4_test_02.csv,ALL,Disk intensive,0.8285
network_4_test_03.csv,CPU,Network intensive,0.4338
network_4_test_03.csv,MEMORY,Disk intensive,0.4451
network_4_test_03.csv,DISK_IO,CPU intensive,0.6068
network_4_test_03.csv,ENERGY,Disk intensive,0.2069
network_4_test_03.csv,ALL,Disk intensive,0.8921
network_4_test_04.csv,CPU,Network intensive,0.4859
network_4_test_04.csv,MEMORY,Disk intensive,0.4456
network_4_test_04.csv,DISK_IO,CPU intensive,0.5916
network_4_test_04.csv,ENERGY,Disk intensive,0.2182
network_4_test_04.csv,ALL,Disk intensive,0.9071
network_4_test_05.csv,CPU,Network intensive,0.3416
network_4_test_05.csv,MEMORY,Disk intensive,0.445
network_4_test_05.csv,DISK_IO,CPU intensive,0.6071
network_4_test_05.csv,ENERGY,Disk intensive,0.2099
network_4_test_05.csv,ALL,Disk intensive,0.8955
network_4_test_06.csv,CPU,Network intensive,0.4917
network_4_test_06.csv,MEMORY,Disk intensive,0.4439
network_4_test_06.csv,DISK_IO,CPU intensive,0.612
network_4_test_06.csv,ENERGY,Disk intensive,0.2161
network_4_test_06.csv,ALL,Disk intensive,0.8985
network_4_test_07.csv,CPU,Network intensive,0.7525
network_4_test_07.csv,MEMORY,Disk intensive,0.4795
network_4_test_07.csv,DISK_IO,CPU intensive,0.5894
network_4_test_07.csv,ENERGY,Disk intensive,0.9225
network_4_test_07.csv,ALL,Disk intensive,0.8931
network_4_test_08.csv,CPU,Network intensive,0.4234
network_4_test_08.csv,MEMORY,Disk intensive,0.4439
network_4_test_08.csv,DISK_IO,CPU intensive,0.6212
network_4_test_08.csv,ENERGY,CPU intensive,0.262
network_4_test_08.csv,ALL,Disk intensive,0.8934
network_4_test_09.csv,CPU,Network intensive,0.6573
network_4_test_09.csv,MEMORY,Disk intensive,0.4452
network_4_test_09.csv,DISK_IO,CPU intensive,0.6172
network_4_test_09.csv,ENERGY,Disk intensive,0.2148
network_4_test_09.csv,ALL,Disk intensive,0.8662
network_4_test_10.csv,CPU,Network intensive,0.9708
network_4_test_10.csv,MEMORY,Disk intensive,0.5273
network_4_test_10.csv,DISK_IO,CPU intensive,0.5666
network_4_test_10.csv,ENERGY,Disk intensive,1.0
network_4_test_10.csv,ALL,Disk intensive,0.888
